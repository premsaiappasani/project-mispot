<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1.0" />
    <title>
      Dynamsoft Barcode Reader Sample - Hello World (Decoding via Camera)
    </title>
    <script src="https://cdn.jsdelivr.net/npm/dynamsoft-javascript-barcode@8.6.3/dist/dbr.js"></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
      crossorigin="anonymous"
    ></script>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous"
    />
  </head>

  <body>
    <nav
      class="navbar navbar-expand-lg navbar-dark bg-dark"
      style="position: relative; color: #f4d504 !important"
    >
      <div class="container-fluid">
        <img src="mispotimg.png" style="height: 50px; display: inline" />
        <a
          class="navbar-brand"
          href="https://mismatchesspotted.el.r.appspot.com/home"
          style="
            font-family: 'Courier New', monospace;
            font-weight: bold;
            color: #f4d504 !important;
          "
          ><div>MiSpot</div>
          <div style="font-size: 0.3em">Mismatches Spotted</div></a
        >
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarNavDropdown"
          aria-controls="navbarNavDropdown"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div id="logreg" style="position: absolute; right: 60px">
          <span class="nav-item"> </span>
        </div>
        <div class="collapse navbar-collapse bg-dark" id="navbarNavDropdown">
          <ul class="navbar-nav">
            <li class="nav-item">
              <a
                class="nav-link active"
                aria-current="page"
                href="https://mismatchesspotted.el.r.appspot.com/home"
                >Home</a
              >
            </li>
            <li>
              <a
                class="nav-link"
                href="https://mismatchesspotted.el.r.appspot.com/login"
                >Login</a
              >
            </li>
            <li>
              <a
                class="nav-link"
                href="https://mismatchesspotted.el.r.appspot.com/signup"
                >Register</a
              >
            </li>
            <li class="nav-item dropdown">
              <a
                class="nav-link dropdown-toggle"
                href="#"
                id="navbarDropdownMenuLink"
                role="button"
                data-bs-toggle="dropdown"
                aria-expanded="false"
              >
                Docs
              </a>
              <ul
                class="dropdown-menu"
                aria-labelledby="navbarDropdownMenuLink"
                style="background-color: #212529 !important"
              >
                <li>
                  <a
                    class="dropdown-item"
                    href="https://mismatchesspotted.el.r.appspot.com/demo"
                    >Demo</a
                  >
                </li>
                <li>
                  <a
                    class="dropdown-item"
                    href="https://mismatchesspotted.el.r.appspot.com/start"
                    >Getting Started</a
                  >
                </li>
                <li>
                  <a
                    class="dropdown-item"
                    href="https://mismatchesspotted.el.r.appspot.com/pricing"
                    >Pricing</a
                  >
                </li>
              </ul>
            </li>
          </ul>
        </div>
      </div>
    </nav>
    <div class="card" style="align-items: center; margin: 30px; border: 0px">
      <button id="readBarcode" class="">Read Barcode via Camera</button>
      <!-- <canvas id="canvas" width="640" height="480"></canvas> -->
      <p id="barcodeNumber" style="visibility: hidden">
        <%= passingbarcodeNum %>
      </p>
      <div id="scannerV" style="width: 50vw; height: 50vh"></div>
      <div align="right" id="cvses"></div>
    </div>
    <script src="credentials.js"></script>
    <script>
      Dynamsoft.DBR.BarcodeScanner.organizationID = "100721303";
      Dynamsoft.DBR.BarcodeReader.productKeys = barcodekey;
      let pScanner = null;
      document.getElementById("readBarcode").onclick = async function () {
        try {
          let scanner = await (pScanner =
            pScanner || Dynamsoft.DBR.BarcodeScanner.createInstance());
          scanner._bUseWebgl = false;
          document
            .getElementById("scannerV")
            .appendChild(scanner.getUIElement());
          await scanner.updateRuntimeSettings("balance");
          let rs = await scanner.getRuntimeSettings();
          rs.intermediateResultTypes = 1;
          await scanner.updateRuntimeSettings(rs);
          scanner.onFrameRead = async (results) => {
            for (let result of results) {
              console.log(result.barcodeText);
              let bbbb = document.getElementById("barcodeNumber").innerHTML;
              let cccc = result.barcodeText;
              if (bbbb === cccc) {
                try {
                  let cvss = await scanner.getIntermediateCanvas();
                  console.log(cvss);
                  var image_data_url = "";
                  image_data_url = cvss[0].toDataURL("image/jpeg");
                  let img = image_data_url;
                  console.log(img);
                  let ttid = window.location.href;
                  console.log(ttid);
                  ttid = ttid.slice(58);
                  console.log(ttid);
                  var minutes = 1000 * 60;
                  var hours = minutes * 60;
                  var days = hours * 24;
                  var d = new Date();
                  var t = d.getTime();
                  let t1 = 0;
                  let t2 = 0;
                  var y = Math.round(t % days);
                  y = Math.round(y / 1000);
                  t2 = y;
                  time = t2 - t1;
                  console.log(time, t2, t1);
                  bbbb = "";
                  var httpPost = new XMLHttpRequest(),
                    path =
                      "https://mismatchesspotted.el.r.appspot.com/statu/" +
                      ttid,
                    data = JSON.stringify({ img, time });
                  httpPost.onreadystatechange = function (err) {
                    if (httpPost.readyState == 4 && httpPost.status == 200) {
                      console.log(httpPost.responseText);
                      location.replace(httpPost.responseText);
                    } else {
                      console.log(err);
                    }
                  };
                  console.log(ttid);
                  httpPost.open("POST", path, true);
                  httpPost.send(data);
                  var txt = undefined;
                  var prev = undefined;
                } catch (ex) {
                  console.error(ex);
                }
                scanner.hide();
              }
            }
          };

          // scanner.onFrameRead = async(results) => {
          //     console.log("Barcodes on one frame:");
          //     for (let result of results) {
          //         console.log(result.barcodeFormatString + ": " + result.barcodeText);
          //         let bbbb = document.getElementById('barcodeNumber').innerHTML;
          //         let cccc = " "+result.barcodeText+" ";
          //         console.log(bbbb);
          //         console.log(cccc);
          //         if( cccc == bbbb ){
          //           console.log("if statement is working");
          //         //   await scanner.updateRuntimeSettings('balance');
          //         //   let rs = await scanner.getRuntimeSettings();
          //         //   rs.intermediateResultTypes = 1;
          //         //   await scanner.updateRuntimeSettings(rs);

          //           console.log(cvss);
          //           console.log(cvss0);
          //         //   document.getElementById('cvses').appendChild(cvss);
          //         for (let cvs of cvss0) {
          //             console.log("loop working");
          //             document.getElementById('cvses').appendChild("it is appending");
          //         }
          //         //   scanner.destroy();
          //         //   const screenShot = document.getElementsByClassName("dbrScanner-cvs-scanarea");
          //         //   let canvas = document.getElementById("canvas");
          //         //   let context = canvas.getContext("2d");
          //         //   var image_data_url = "";
          //         //   context.drawImage(screenShot, 0, 0, canvas.width, canvas.height);
          //         //   image_data_url = canvas.toDataURL("image/jpeg");
          //         //   console.log(image_data_url);
          //         //   break;
          //         }
          //     }
          // };
          await scanner.show();
        } catch (ex) {
          alert(ex.message);
          throw ex;
        }
      };
    </script>
  </body>
</html>
